package nu.hex.asciianimator.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
import nu.hex.asciianimator.io.AazFileReader;

/**
 *
 * @author hl
 */
public class MainWindow extends javax.swing.JFrame {

    private static final String START = "Start";
    private static final String STOP = "Stop";
    private static final String INFO_TEXT_1 = "Use Open File to load an ASCII Animation file (aaz)";
    private static final String INFO_TEXT_2 = "Click Start to run animation";
    private List<String> strings = null;
    private String path;
    private int tenths_of_second = 5;
    private final int tenth_of_second = 100;
    private int currentImage = 0;
    private Timer timer = null;

    public MainWindow() {
        initComponents();
        path = "";
        displayArea.setText(INFO_TEXT_1);
        timer = new Timer(tenths_of_second * tenth_of_second, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                animate();
                repaint();
            }
        });
    }

    private void animate() {
        if (strings != null && !strings.isEmpty()) {
            if (currentImage == strings.size()) {
                currentImage = 0;
            }
            String image = strings.get(currentImage);
            updateDisplay(image);
            currentImage++;
        }
    }

    private static String getStartToolTip() {
        return START + " animation.";
    }

    private static String getStopToolTip() {
        return STOP + " animation.";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        programLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        fileChooserButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        startStopButton = new javax.swing.JButton();
        frameLabel = new javax.swing.JLabel();
        displayScrollPane = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        programLabel.setFont(new java.awt.Font("TlwgTypewriter", 1, 24)); // NOI18N
        programLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        programLabel.setText("ASCII Animator - v 1.0");

        fileChooserButton.setText("Open file");
        fileChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserButtonActionPerformed(evt);
            }
        });

        settingsButton.setText("Settings");
        settingsButton.setEnabled(false);

        startStopButton.setText(START);
        startStopButton.setToolTipText(getStartToolTip());
        startStopButton.setEnabled(false);
        startStopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startStopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fileChooserButton)
                            .addComponent(settingsButton)
                            .addComponent(startStopButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        displayArea.setEditable(false);
        displayArea.setColumns(20);
        displayArea.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 24)); // NOI18N
        displayArea.setRows(5);
        displayScrollPane.setViewportView(displayArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(programLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(programLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserButtonActionPerformed
        importFile();
        updateDisplay(INFO_TEXT_2);
        startStopButton.setEnabled(hasAnimationContent());
    }//GEN-LAST:event_fileChooserButtonActionPerformed

    private void startStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startStopButtonActionPerformed
        toggleStartStop();
        toggleFileChooserButton();
    }//GEN-LAST:event_startStopButtonActionPerformed

    private boolean hasAnimationContent() {
        return strings != null && !strings.isEmpty();
    }
    private void toggleStartStop() {
        if (startStopButton.getText().equals(STOP)) {
            startStopButton.setText(START);
            startStopButton.setToolTipText(getStartToolTip());
            stopAnimation();
        } else {
            startStopButton.setText(STOP);
            startStopButton.setToolTipText(getStopToolTip());
            startAnimation();
        }
    }

    private void toggleFileChooserButton() {
        fileChooserButton.setEnabled(startStopButton.getText().equals(START));
    }

    public void openAnimatorWindow() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea displayArea;
    private javax.swing.JScrollPane displayScrollPane;
    private javax.swing.JButton fileChooserButton;
    private javax.swing.JLabel frameLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel programLabel;
    private javax.swing.JButton settingsButton;
    private javax.swing.JButton startStopButton;
    // End of variables declaration//GEN-END:variables

    private void importFile() {
        try {
            AazFileChooser fileChooser = new AazFileChooser(path, this);
            File file = fileChooser.getFile();
            if (file != null) {
                path = file.getParent();
                strings = new AazFileReader(new FileInputStream(file)).read();
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateDisplay(String text) {
        displayArea.setText(text);
        repaint();
    }

    private void startAnimation() {
        timer.start();
    }

    private void stopAnimation() {
        timer.stop();
        if (hasAnimationContent()) {
            updateDisplay(INFO_TEXT_1);
        } else {
            updateDisplay(strings.get(0));
        }
        toggleFileChooserButton();
    }
}
